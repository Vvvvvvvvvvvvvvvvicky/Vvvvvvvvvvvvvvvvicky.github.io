<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Vic</title>
  
  <subtitle>日常打卡</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vvvvvvvvvvvvvvvvicky.github.io/"/>
  <updated>2018-03-26T03:40:34.266Z</updated>
  <id>https://vvvvvvvvvvvvvvvvicky.github.io/</id>
  
  <author>
    <name>Vic Lee</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>maupassant主题设置gitment</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/25/maupassant%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AEgitment/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/25/maupassant主题设置gitment/</id>
    <published>2018-03-25T05:25:13.000Z</published>
    <updated>2018-03-26T03:40:34.266Z</updated>
    
    <content type="html"><![CDATA[<p>maupassant主题设置gitment踩坑记录。<br><a id="more"></a><br>1.在主题的配置文件_config.yml中更改配置如下：</p><div style="width:50%;align:left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80%20&size=b10000_10000&sec=1521966153467&di=17a022292609fafdfa8aff705fb38d39&imgtype=jpg&src=http%3A%2F%2Fh.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2F500fd9f9d72a605932b1f9162434349b033bba1c.jpg"><br></div><br>* 注意大小写，写错会报“Error: Not Found”）<br><br>2.修改文件Blog\themes\maupassant\layout_partial\comments.pug，设置样式内容：<br><div style="width:80%;align:left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80%20&size=b10000_10000&sec=1521966602824&di=23bc17b1564c7b55592c0d23aef66241&imgtype=jpg&src=http%3A%2F%2Ff.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2Fac6eddc451da81cba4a986c15e66d0160924316a.jpg"><br></div><br><pre><br><code>link(rel=’stylesheet’, href=’<a href="https://imsun.github.io/gitment/style/default.css&#39;" target="_blank" rel="noopener">https://imsun.github.io/gitment/style/default.css&#39;</a>)<br>script(src=’<a href="https://imsun.github.io/gitment/dist/gitment.browser.js&#39;" target="_blank" rel="noopener">https://imsun.github.io/gitment/dist/gitment.browser.js&#39;</a>)</code><br></pre><br>将划线部分复制粘贴，并补充将id值改为page.date（如不加，则默认传入文章url，超过50个字符报错“Error：validation failed”）<br><br>3.在每篇的开头部分补充  comments: true<br><div style="width:25%;align:left"><br><img src="https://timgsa.baidu.com/timg?image&quality=80%20&size=b10000_10000&sec=1521967111606&di=0dede719fa62743754e6e7eeaf6c5777&imgtype=jpg&src=http%3A%2F%2Fa.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2F8718367adab44aedfe61b8e8bf1c8701a18bfb8b.jpg"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;maupassant主题设置gitment踩坑记录。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/hexo/"/>
    
      <category term="gitment" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/gitment/"/>
    
      <category term="踩坑" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>hexo更换主题，本地可以，上传git则不生效</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/23/hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98%EF%BC%8C%E6%9C%AC%E5%9C%B0%E5%8F%AF%E4%BB%A5%EF%BC%8C%E4%B8%8A%E4%BC%A0git%E5%88%99%E4%B8%8D%E7%94%9F%E6%95%88/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/23/hexo更换主题，本地可以，上传git则不生效/</id>
    <published>2018-03-23T13:40:54.000Z</published>
    <updated>2018-03-25T05:56:05.674Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Q</strong>:运行原主题landscape正常，更换主题后，hexo g生成文件，hexo s使其在本地运行，运行正常，hexo d上传到github，访问出现空白无内容以及乱码。<br><a id="more"></a><br><strong>A</strong>:查询了一些资料,得到这可能是hexo的缓存的问题，即根目录的db.json文件。所以在发布网站之前，先用hexo clean清除缓存，然后再部署网站。  </p><p>清除缓存的方法：  </p><ol><li>执行命令：hexo clean  </li><li>然后可以生成静态博客并在本地预览：hexo g ; hexo s</li></ol><p><strong>另</strong>：在多次上传后，同一浏览器存在缓存，故导致改变不能立刻显示，利用Ctrl+F5强制刷新。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;:运行原主题landscape正常，更换主题后，hexo g生成文件，hexo s使其在本地运行，运行正常，hexo d上传到github，访问出现空白无内容以及乱码。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/hexo/"/>
    
      <category term="踩坑" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
      <category term="theme" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/theme/"/>
    
  </entry>
  
  <entry>
    <title>用chkdsk删除损坏文件</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/23/%E7%94%A8chkdsk%E5%88%A0%E9%99%A4%E6%8D%9F%E5%9D%8F%E6%96%87%E4%BB%B6/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2018/03/23/用chkdsk删除损坏文件/</id>
    <published>2018-03-23T11:18:45.000Z</published>
    <updated>2018-03-25T05:54:26.933Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Q</strong>:系统盘文件夹已损坏无法直接删除，提示需要调用系统命令chkdsk删除该文件。<br><a id="more"></a><br><strong>A</strong>：cmd运行“chkdsk E: /f”扫描指定盘（E盘），自动检查之后进行删除，自动关闭。<br>系统会检查出已损坏文件，并删除，健康文件依旧保留。  </p><p><img src="https://timgsa.baidu.com/timg?image&amp;quality=80%20&amp;size=b10000_10000&amp;sec=1521814233947&amp;di=3e111ac9cd31867c4a6b504398d78ec1&amp;imgtype=jpg&amp;src=http%3A%2F%2Fe.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2F7af40ad162d9f2d31b76dfe6a5ec8a136327cc50.jpg" alt="chkdsk处理坏文件" title="chkdsk处理坏文件"></p><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({  id: '<%= page.date %>'  owner: 'Vvvvvvvvvvvvvvvvicky',  repo: 'comment.github.io',  oauth: {    client_id: 'da11ae3e133507a54c29',    client_secret: '5ee4f2c6cf5943d8437c673222e48f249bee5cf9',  },})gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;:系统盘文件夹已损坏无法直接删除，提示需要调用系统命令chkdsk删除该文件。&lt;br&gt;
    
    </summary>
    
      <category term="windows" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/windows/"/>
    
    
      <category term="踩坑" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/%E8%B8%A9%E5%9D%91/"/>
    
      <category term="windows" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>VSTS笔记</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2017/12/26/VSTS%E7%AC%94%E8%AE%B0/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2017/12/26/VSTS笔记/</id>
    <published>2017-12-25T16:12:52.000Z</published>
    <updated>2018-03-25T05:52:24.360Z</updated>
    
    <content type="html"><![CDATA[<p>搭建TFS之后，再度体验线上版本的VSTS，记录学习过程<br><a id="more"></a></p><h1 id="VSTS笔记-nbsp-nbsp-nbsp-Day-1"><a href="#VSTS笔记-nbsp-nbsp-nbsp-Day-1" class="headerlink" title="VSTS笔记&nbsp;&nbsp;&nbsp;Day 1"></a>VSTS笔记&nbsp;&nbsp;&nbsp;Day 1</h1><p>Epic<br>&nbsp;&nbsp;Feature<br>&nbsp;&nbsp;&nbsp;&nbsp;Story<br>&nbsp;&nbsp;&nbsp;&nbsp;Story<br>&nbsp;&nbsp;Feature<br>&nbsp;&nbsp;&nbsp;&nbsp;Story<br>&nbsp;&nbsp;&nbsp;&nbsp;Story  </p><p>以上为三者的包含关系。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建TFS之后，再度体验线上版本的VSTS，记录学习过程&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/Java/"/>
    
    
      <category term="VSTS" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/VSTS/"/>
    
  </entry>
  
  <entry>
    <title>EntityManager相关</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2017/10/05/%E7%AE%80%E4%BB%8BEntityManager/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2017/10/05/简介EntityManager/</id>
    <published>2017-10-05T15:37:54.000Z</published>
    <updated>2018-03-26T03:27:30.613Z</updated>
    
    <content type="html"><![CDATA[<p>EntityManager的含义及用法<br><a id="more"></a></p><h3 id="EntityManager介绍"><a href="#EntityManager介绍" class="headerlink" title="EntityManager介绍"></a>EntityManager介绍</h3><p>EntityManager是JPA操作基础，获取到EntityManager实例后，才能通过JPA对数据库进行操作，类似于Connection实例和JDBC的关系。</p><h3 id="什么是JPA"><a href="#什么是JPA" class="headerlink" title="什么是JPA"></a>什么是JPA</h3><p><strong>JPA —— Java Persistence API  Java持久化API</strong><br>定义了 对象-关系映射+实体对象持久化标准接口<br>JPA在持久化上下文中维护实体生命周期：<br>&nbsp;&nbsp;1. ORM元数据（支持annotation和xml）<br>&nbsp;&nbsp;2. 实体CRUD操作<br>&nbsp;&nbsp;2. 查询JPQL  </p><h3 id="实体的生命周期"><a href="#实体的生命周期" class="headerlink" title="实体的生命周期"></a>实体的生命周期</h3><ol><li>new ——新创建的实体对象，未分配主键值  </li><li>managed ——被EntityManager管理，处于Persistence Context  </li><li>detached ——处于Application Domain，在Persistance Context之外  </li><li>removed ——对象被删除  </li></ol><h4 id="方法："><a href="#方法：" class="headerlink" title="方法："></a>方法：</h4><ol><li>persist ——持久化（将新建或已删除的实体变为managed状态，存库）  </li><li>remove ——删除实体  </li><li>merge ——游离实体变为managed，存库  <div style="width:60%;align:center"><br><img src="https://timgsa.baidu.com/timg?image&quality=80%20&size=b10000_10000&sec=1507292305525&di=5c933128fa51ab422023b3310969573d&imgtype=jpg&src=http%3A%2F%2Fe.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2Fa9d3fd1f4134970a2c76ab5b9ecad1c8a7865db8.jpg"><br></div>  </li></ol><h3 id="实体关系映射-ORM"><a href="#实体关系映射-ORM" class="headerlink" title="实体关系映射 ORM"></a>实体关系映射 ORM</h3><h4 id="基本映射"><a href="#基本映射" class="headerlink" title="基本映射"></a>基本映射</h4><table><thead><tr><th style="text-align:left">对象</th><th style="text-align:left">数据库</th><th style="text-align:left">annotation</th><th style="text-align:left">可选annotation</th></tr></thead><tbody><tr><td style="text-align:left">Class</td><td style="text-align:left">Table</td><td style="text-align:left">@Entity</td><td style="text-align:left">@Table(name=”tableName”)</td></tr><tr><td style="text-align:left">property</td><td style="text-align:left">colum</td><td style="text-align:left">@Id</td><td style="text-align:left">@GeneratedValue</td></tr><tr><td style="text-align:left">property</td><td style="text-align:left">primary key</td><td style="text-align:left">@Entity</td><td style="text-align:left">@Table(name=”tableName”)</td></tr><tr><td style="text-align:left">property</td><td style="text-align:left">NONE</td><td style="text-align:left">@Transient</td></tr></tbody></table><h4 id="ID生成策略"><a href="#ID生成策略" class="headerlink" title="ID生成策略"></a>ID生成策略</h4><ol><li>GeneratorType.AUTO JPA自动生成</li><li>GenerationType.IDENTITY 数据库自增长</li><li>GenerationType.SEQUENCE 数据库序列号</li><li>GenerationType.TABLE 数据库表记录ID的增长（需定义一个TableGenarator）</li></ol><h4 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h4><table><thead><tr><th style="text-align:left">关系类型</th><th style="text-align:left">Owning-Side</th><th style="text-align:left">Inverse-Side</th></tr></thead><tbody><tr><td style="text-align:left">one-to-one</td><td style="text-align:left">@OneToOne</td><td style="text-align:left">@OneToOne(mappedBy=”othersideName”)</td></tr><tr><td style="text-align:left">one-to-many / @ManyToOne</td><td style="text-align:left">colum</td><td style="text-align:left">@OneToMany(mappedBy=”xxx”)</td></tr><tr><td style="text-align:left">many-to-many</td><td style="text-align:left">@ManyToMany</td><td style="text-align:left">@ManyToMany(mappedBy =”xxx”)</td></tr></tbody></table><h3 id="查询语言"><a href="#查询语言" class="headerlink" title="查询语言"></a>查询语言</h3><ol><li>根据主键查询，EntityManager的find方法：T find(Class entityClass, Object primaryKey)  </li><li>使用JPQL查询语言（完全面向对象，类似hibernate HQL），使用EntityManager的createQuery方法：Query createQuery(String qlString)  <h5 id="EntityManager的各个方法"><a href="#EntityManager的各个方法" class="headerlink" title="EntityManager的各个方法"></a>EntityManager的各个方法</h5><img src="https://timgsa.baidu.com/timg?image&amp;quality=80%20&amp;size=b10000_10000&amp;sec=1507467896237&amp;di=7ce1661ed3e030471ba1624402867d55&amp;imgtype=jpg&amp;src=http%3A%2F%2Fb.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2F91529822720e0cf30e1627830146f21fbf09aae1.jpg" alt="EntityManager方法"></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;EntityManager的含义及用法&lt;br&gt;
    
    </summary>
    
      <category term="Java" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>更新npm至最新版本</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/npm%E6%8C%87%E4%BB%A4%E6%9B%B4%E6%96%B0/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/npm指令更新/</id>
    <published>2016-02-21T08:04:09.000Z</published>
    <updated>2018-03-25T05:52:06.873Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Q</strong>：如何更新npm至最新版本<br><a id="more"></a><br><strong>A</strong>：命令行运行：</p><p>npm install -g npm</p><p>npm就自动为我们更新到最新版本</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt;：如何更新npm至最新版本&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>小程序</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%85%A5%E9%97%A8/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/小程序入门/</id>
    <published>2016-02-21T08:04:09.000Z</published>
    <updated>2018-03-25T05:51:36.560Z</updated>
    
    <content type="html"><![CDATA[<p>小程序之旅<br><a id="more"></a></p><h2 id="Day-1"><a href="#Day-1" class="headerlink" title="Day 1"></a>Day 1</h2><h3 id="代码构成"><a href="#代码构成" class="headerlink" title="代码构成"></a>代码构成</h3><ol><li><p>JSON配置<br>| :—— | :——- |<br>| app.json | 小程序全局配置：所有页面路径、界面表现、网络超时时间、底部 tab 等 |<br>| project.config.json | 工具配置：界面颜色、编译配置 |<br>| page.json | 页面配置：顶部颜色、是否允许下拉刷新等 |  </p></li><li><p>WXML模板<br>HTML的角色<br>写 HTML 的时候，经常会用到的标签是 div, p, span<br>小程序的 WXML 用的标签是 view, button, text 等<br>MVVM 的开发模式(例如 React, Vue)，提倡把渲染和逻辑分离——JS仅管理状态，不直接操作DOM  </p></li><li><p>WXSS样式<br>尺寸单位：支持新的尺寸单位 rpx<br>全局的样式和局部样式：app.wxss 作为全局样式，会作用于当前小程序的所有页面，局部页面样式 page.wxss 仅对当前页面生效。  </p></li><li><p>JS交互</p></li></ol><h2 id="小程序"><a href="#小程序" class="headerlink" title="小程序"></a>小程序</h2><ol><li>启动<br>-&gt; 客户端将代码包下载到本地<br>-&gt; app.js的App实例onLaunch回调</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;小程序之旅&lt;br&gt;
    
    </summary>
    
      <category term="小程序" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
    
      <category term="小程序" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
  </entry>
  
  <entry>
    <title>开篇</title>
    <link href="https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/%E5%BC%80%E7%AF%87/"/>
    <id>https://vvvvvvvvvvvvvvvvicky.github.io/2016/02/21/开篇/</id>
    <published>2016-02-21T08:04:09.000Z</published>
    <updated>2018-03-26T03:26:16.215Z</updated>
    
    <content type="html"><![CDATA[<p>开篇说点什么吧。<br><a id="more"></a></p><pre><code>while(true){    keepLeaning(Things.ALL);  keepReal();}</code></pre><h3 id="学习阶段划分"><a href="#学习阶段划分" class="headerlink" title="学习阶段划分"></a>学习阶段划分</h3><div style="width:80%;align:center"><br><img src="https://timgsa.baidu.com/timg?image&quality=80%20&size=b10000_10000&sec=1506935348251&di=ccc2161f7f4a4e7ea485aaf2379c03ad&imgtype=jpg&src=http%3A%2F%2Fb.hiphotos.baidu.com%2Fimage%2Fpic%2Fitem%2Fc995d143ad4bd113a2a4933f51afa40f4bfb0555.jpg"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开篇说点什么吧。&lt;br&gt;
    
    </summary>
    
      <category term="手记" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/categories/%E6%89%8B%E8%AE%B0/"/>
    
    
      <category term="手记" scheme="https://vvvvvvvvvvvvvvvvicky.github.io/tags/%E6%89%8B%E8%AE%B0/"/>
    
  </entry>
  
</feed>
